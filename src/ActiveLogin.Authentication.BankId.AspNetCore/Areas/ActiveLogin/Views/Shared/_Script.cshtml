@model ActiveLogin.Authentication.BankId.AspNetCore.Areas.ActiveLogin.Models.BankIdUiViewModel

<script>
    (function (options) {
        // Pre check
        var requiredFeatures = [window.fetch, window.sessionStorage];
        var isMissingSomeFeature = requiredFeatures.some(function(x) { return !x; });
        if (isMissingSomeFeature) {
            showStatus(options.unsupportedBrowserErrorMessage, 'danger', false);
            return;
        }

        // QR

        var qrLastRefreshTimestamp = null;
        var qrIsRefreshing = false;

        // OrderRef

        var sessionStorageOrderRefKey = 'ActiveLogin_BankId_OrderRef';
        var orderRef = sessionStorage.getItem(sessionStorageOrderRefKey);
        sessionStorage.removeItem(sessionStorageOrderRefKey);

        // Elements

        var uiWrapperElement = document.querySelector('.activelogin-bankid-ui--wrapper');
        var formElement = uiWrapperElement.querySelector('.activelogin-bankid-ui--form');

        var statusWrapperElement = uiWrapperElement.querySelector('.activelogin-bankid-ui--status-wrapper');
        var statusInfoElement = uiWrapperElement.querySelector('.activelogin-bankid-ui--status-info');
        var statusSpinnerElement = uiWrapperElement.querySelector('.activelogin-bankid-ui--status-spinner');
        var statusMessageElement = uiWrapperElement.querySelector('.activelogin-bankid-ui--status-message');
        var cancelButtonElement = uiWrapperElement.querySelector('.activelogin-bankid-ui--cancel-button');
        var qrCodeElement = uiWrapperElement.querySelector('.activelogin-bankid-ui--qr-code-image');

        var startBankIdAppButtonElement = uiWrapperElement.querySelector('.activelogin-bankid-ui-startapp-button');
        
        // Events

        if (orderRef) {
            showOrderRefStatus(orderRef);
        } else {
            document.addEventListener('DOMContentLoaded', function () {
                resetUi();
                login();
            });
        }

        // Boot

        function showOrderRefStatus(orderRef) {
            var requestVerificationTokenElement = formElement.querySelector('[name="RequestVerificationToken"]');
            var returnUrlElement = formElement.querySelector('[name="ReturnUrl"]');
            var uiOptionsElement = formElement.querySelector('[name="UiOptions"]');

            showStatus(options.initialStatusMessage, 'white', true);
            checkStatus(requestVerificationTokenElement.value, returnUrlElement.value, uiOptionsElement.value, orderRef);
        }

        function login() {
            var requestVerificationTokenElement = formElement.querySelector('[name="RequestVerificationToken"]');
            var returnUrlElement = formElement.querySelector('[name="ReturnUrl"]');
            var cancelReturnUrlElement = formElement.querySelector('[name="CancelReturnUrl"]');
            var uiOptionsElement = formElement.querySelector('[name="UiOptions"]');

            initialize(requestVerificationTokenElement.value, returnUrlElement.value, cancelReturnUrlElement.value, uiOptionsElement.value);
        }

        function resetUi() {
            hide(qrCodeElement);
        }

        // BankID

        var autoStartAttempts = 0;
        var loginIsCancelledByUser = false;
        function initialize(requestVerificationToken, returnUrl, cancelUrl, uiOptions) {
            loginIsCancelledByUser = false;

            function enableCancelButton(orderRef) {
                var onCancelButtonClick = function(event) {
                    cancel(requestVerificationToken, cancelUrl, orderRef, uiOptions);
                    event.target.removeEventListener('click', onCancelButtonClick);
                };
                cancelButtonElement.addEventListener('click', onCancelButtonClick);
            }

            postJson(options.bankIdInitializeApiUrl, requestVerificationToken, {
                'returnUrl': returnUrl,
                'uiOptions': uiOptions
            })
                .then(function (data) {
                    if (data.isAutoLaunch) {
                        if (!data.checkStatus) {
                            sessionStorage.setItem(sessionStorageOrderRefKey, data.orderRef);
                        }

                        if (data.deviceMightRequireUserInteractionToLaunchBankIdApp) {
                            var startBankIdAppButtonOnClick = function(event) {
                                window.location.href = data.redirectUri;
                                hide(startBankIdAppButtonElement);
                                event.target.removeEventListener('click', startBankIdAppButtonOnClick);
                            };
                            startBankIdAppButtonElement.addEventListener('click', startBankIdAppButtonOnClick);

                            show(startBankIdAppButtonElement);
                        } else {
                            window.location.href = data.redirectUri;
                        }
                    }

                    if (!!data.qrStartState && !!data.qrCodeAsBase64) {
                        setQrCode(data.qrCodeAsBase64);
                        qrLastRefreshTimestamp = new Date();
                        refreshQrCode(requestVerificationToken, data.qrStartState);
                    }

                    enableCancelButton(data.orderRef);

                    hide(formElement);
                    showStatus(options.initialStatusMessage, 'white', true);

                    if (data.checkStatus) {
                        checkStatus(requestVerificationToken, returnUrl, uiOptions, data.orderRef);
                    }
                }).catch(function (error) {
                    showStatus(error.message, 'danger', false);
                    hide(qrCodeElement);
                    hide(startBankIdAppButtonElement);
                    enableCancelButton();
                });
        }

        function checkStatus(requestVerificationToken, returnUrl, uiOptions, orderRef) {
            if (loginIsCancelledByUser) {
                return;
            }

            postJson(options.bankIdStatusApiUrl, requestVerificationToken, {
                    'orderRef': orderRef,
                    'returnUrl': returnUrl,
                    'uiOptions': uiOptions,
                    'autoStartAttempts': autoStartAttempts
                })
                .then(function (data) {
                    if (data.retryLogin) {
                        autoStartAttempts++;
                        login();
                    } else if (data.isFinished) {
                        window.location.href = data.redirectUri;
                    } else if (!loginIsCancelledByUser) {
                        autoStartAttempts = 0;
                        showStatus(data.statusMessage, 'white', true);
                        setTimeout(function () {
                            checkStatus(requestVerificationToken, returnUrl, uiOptions, orderRef);
                        }, options.statusRefreshIntervalMs);
                    }
                }).catch(function (error) {
                    if (!loginIsCancelledByUser) {
                        showStatus(error.message, 'danger', false);
                        hide(startBankIdAppButtonElement);
                    }
                    hide(qrCodeElement);
                });
        }

        function refreshQrCode(requestVerificationToken, qrStartState) {
            if (loginIsCancelledByUser) {
                return;
            }

            if (qrIsRefreshing) {
                return;
            }

            var currentTime = new Date();
            var timeSinceLastRefresh = currentTime - qrLastRefreshTimestamp;
            if (timeSinceLastRefresh < options.qrCodeRefreshIntervalMs) {
                setTimeout(function () {
                    refreshQrCode(requestVerificationToken, qrStartState);
                }, options.qrCodeRefreshIntervalMs);
                return;
            }
            qrIsRefreshing = true;

            postJson(options.bankIdQrCodeApiUrl, requestVerificationToken, {
                    'qrStartState': qrStartState
                })
                .then(function (data) {
                    if (!!data.qrCodeAsBase64) {
                        qrLastRefreshTimestamp = new Date();
                        setQrCode(data.qrCodeAsBase64);
                        setTimeout(function () {
                            refreshQrCode(requestVerificationToken, qrStartState);
                        }, options.qrCodeRefreshIntervalMs);
                    }
                }).catch(function (error) {
                    if (!loginIsCancelledByUser) {
                        showStatus(error.message, 'danger', false);
                        hide(startBankIdAppButtonElement);
                    }
                    hide(qrCodeElement);
                }).finally(() => {
                    qrIsRefreshing = false;
                });
        }

        function setQrCode(qrCodeAsBase64) {
            qrCodeElement.src = 'data:image/png;base64, ' + qrCodeAsBase64;
            show(qrCodeElement);
        }

        function cancel(requestVerificationToken, cancelReturnUrl, orderRef, uiOptions) {
            loginIsCancelledByUser = true;

            if (!orderRef) {
                window.location.href = cancelReturnUrl;
                return;
            }

            postJson(options.bankIdCancelApiUrl,
                requestVerificationToken,
                {
                    'orderRef': orderRef,
                    'uiOptions': uiOptions
                }).finally(function() {
                    window.location.href = cancelReturnUrl;
                });
        }

        // Helpers

        function postJson(url, requestVerificationToken, data) {
            return fetch(url,
                {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': requestVerificationToken
                    },
                    credentials: 'include',
                    body: JSON.stringify(data)
                })
                .then(function (response) {
                    var contentType = response.headers.get("content-type");
                    if (contentType && contentType.indexOf("application/json") !== -1) {
                        return response.json();
                    }

                    throw Error(options.unknownErrorMessage);
                })
                .then(function (data) {
                    if (!!data.errorMessage) {
                        throw Error(data.errorMessage);
                    }
                    return data;
                });
        }

        function showStatus(status, type, spinner) {
            var textClass = 'text-white';
            if (type === 'white') {
                textClass = '';
            }

            statusInfoElement.className = 'card activelogin-bankid-ui--status-info bg-' + type + ' ' + textClass;
            statusMessageElement.innerText = status;
            setVisibility(statusSpinnerElement, spinner, 'inline-block');
            show(statusWrapperElement);
        }

        function setVisibility(element, visible, display) {
            if (!!visible) {
                show(element, display);
            } else {
                hide(element, display);
            }
        }

        function show(element, display) {
            if (!element) {
                return;
            }

            element.style.display = display || 'block';
        }

        function hide(element) {
            if (!element) {
                return;
            }

            element.style.display = 'none';
        }
    }(@Html.Raw(Model.LoginScriptOptionsJson)));
</script>
